{"version":3,"file":"static/js/684.e17cefb6.chunk.js","mappings":"sOAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAE/CC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAU,EAEpDC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAM,EAE5CC,EAAqB,SAAAP,GAAK,OAAIA,EAAMQ,OAAOC,UAAW,EAEtDC,EAAyB,SAAAV,GAClC,IAAMC,EAAWF,EAAeC,GAC1BW,EAAeJ,EAAmBP,GAExC,GAAIW,EAAc,CACd,IAAMC,EAAmBD,EAAaE,cACtC,OAAOZ,EAASO,QAAO,SAACM,GAAO,OAC3BA,EAAQC,KAAKF,cAAcG,SAASJ,EAAiB,GAE7D,CACA,OAAOX,CACX,E,sCChBagB,EAAeC,EAAAA,EAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAI1BC,EAAiBJ,EAAAA,EAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iFAO3BI,EAAQP,EAAAA,EAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uEAMpBO,EAAYV,EAAAA,EAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,yBACtB,SAACU,GAAK,OAAKA,EAAMC,MAAMC,OAAOC,GAAG,IAG/BC,EAASjB,EAAAA,EAAOkB,OAAMC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,2TACb,SAACU,GAAK,OAAKA,EAAMC,MAAMC,OAAOK,WAAW,IAgBvC,SAACP,GAAK,OAAKA,EAAMC,MAAMC,OAAOM,SAAS,I,SC1BzDC,EAAc,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXzC,GAAW0C,EAAAA,EAAAA,IAAY5C,GAC7B6C,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACaC,EAAMJ,EAAnBK,UAAaD,OACbE,EAAKN,EAALM,MAuBF,OACEC,EAAAA,EAAAA,MAAClC,EAAY,CAACmC,SAAUL,GArBT,SAACM,GAChB,IAAQtC,EAAiBsC,EAAjBtC,KAAMuC,EAAWD,EAAXC,OAEVrD,EAASsD,MAAK,SAACzC,GAAO,OAAKA,EAAQC,OAASA,CAAI,IAClDyC,EAAAA,GAAMlD,MAAM,GAADmD,OAAI1C,EAAI,2BAA2B,CAC5C2C,SAAU,MAIVzD,EAASsD,MAAK,SAACzC,GAAO,OAAKA,EAAQwC,SAAWA,CAAM,IACtDE,EAAAA,GAAMlD,MAAM,UAADmD,OAAWH,EAAM,2BAA2B,CACrDI,SAAU,QAKdjB,GAASkB,EAAAA,EAAAA,IAAWN,IACpBH,IACF,IAGiDU,SAAA,EAC7CC,EAAAA,EAAAA,KAACvC,EAAc,CAAAsC,UACbT,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAACpC,GAAKqC,EAAAA,EAAAA,GAAA,CACJC,KAAK,QACDjB,EAAS,OAAQ,CACnBkB,UAAU,EACVC,QAAS,+CAGZjB,EAAOjC,OACN8C,EAAAA,EAAAA,KAACjC,EAAS,CAAAgC,SAAC,sEAMjBC,EAAAA,EAAAA,KAACvC,EAAc,CAAAsC,UACbT,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAACpC,GAAKqC,EAAAA,EAAAA,GAAA,CACJC,KAAK,OACDjB,EAAS,SAAU,CACrBkB,UAAU,EACVC,QACE,mFAGLjB,EAAOM,SACNO,EAAAA,EAAAA,KAACjC,EAAS,CAAAgC,SAAC,uGAOjBC,EAAAA,EAAAA,KAAC1B,EAAM,CAAC4B,KAAK,SAAQH,SAAC,kBAG5B,ECpFaM,EAAYhD,EAAAA,EAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAIb,SAACU,GAAK,OAAKA,EAAMC,MAAMC,OAAOK,WAAW,IAElD6B,EAAQjD,EAAAA,EAAOkD,GAAE5C,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6BCLxBgD,EAAU,SAAHC,GAA+B,IAAzBC,EAAOD,EAAPC,QAASX,EAAQU,EAARV,SAC1B,OACET,EAAAA,EAAAA,MAACe,EAAS,CAAAN,SAAA,EACRC,EAAAA,EAAAA,KAACM,EAAK,CAAAP,SAAEW,IACPX,IAGP,ECRaY,EAAOtD,EAAAA,EAAOuD,GAAErD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,cAIhBqD,EAAOxD,EAAAA,EAAOyD,GAAEnD,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iHAIA,SAACU,GAAK,OAAKA,EAAMC,MAAMC,OAAOK,WAAW,IAGzDsC,EAAe1D,EAAAA,EAAOkB,OAAMT,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0TACnB,SAACU,GAAK,OAAKA,EAAMC,MAAMC,OAAOK,WAAW,IAgBvC,SAACP,GAAK,OAAKA,EAAMC,MAAMC,OAAOM,SAAS,ICvBzDsC,EAAc,WAClB,IAAMC,GAAmBnC,EAAAA,EAAAA,IAAYjC,GAE/B+B,GAAWC,EAAAA,EAAAA,MAMjB,OACEmB,EAAAA,EAAAA,KAACW,EAAI,CAAAZ,SACFkB,EAAiBC,KAAI,SAAAT,GAAA,IAAGvD,EAAIuD,EAAJvD,KAAMuC,EAAMgB,EAANhB,OAAQ0B,EAAEV,EAAFU,GAAE,OACvC7B,EAAAA,EAAAA,MAACuB,EAAI,CAAAd,SAAA,EACHT,EAAAA,EAAAA,MAAA,OAAAS,SAAA,EACET,EAAAA,EAAAA,MAAA,QAAAS,SAAA,CAAO7C,EAAK,SACZ8C,EAAAA,EAAAA,KAAA,QAAAD,SAAON,QAETO,EAAAA,EAAAA,KAACe,EAAY,CAACK,QAAS,kBAZFC,EAY4BF,OAXvDvC,GAAS0C,EAAAA,EAAAA,IAAcD,IADG,IAACA,CAY+B,EAACtB,SAAC,aAL7CoB,EAQJ,KAIf,E,UC7Bad,EAAYhD,EAAAA,EAAOK,IAAGH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAItBI,EAAQP,EAAAA,EAAOQ,MAAKF,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kDCA3B+D,EAAS,WACb,IAAM3C,GAAWC,EAAAA,EAAAA,MACXlC,GAASmC,EAAAA,EAAAA,IAAYpC,GAO3B,OACEsD,EAAAA,EAAAA,KAACK,EAAS,CAAAN,UACRT,EAAAA,EAAAA,MAAA,SAAAS,SAAA,CAAO,0BAELC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACpC,EAAK,CAACsC,KAAK,OAAOsB,MAAO7E,EAAQ8E,SAVb,SAACC,GAC1B9C,GAAS+C,EAAAA,EAAAA,GAAgBD,EAAEE,cAAcJ,OAC3C,QAYF,ECtBaK,EAAgBxE,EAAAA,EAAOkD,GAAEhD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iC,UCShCsE,EAAY,WAEhB,IAAMlD,GAAWC,EAAAA,EAAAA,MAEXtC,GAAYuC,EAAAA,EAAAA,IAAYxC,GACxBG,GAAQqC,EAAAA,EAAAA,IAAYtC,GAQ1B,OALAuF,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACX,GAAG,CAACpD,KAIFU,EAAAA,EAAAA,MAACkB,EAAO,CAACE,QAAQ,YAAWX,SAAA,EAC1BC,EAAAA,EAAAA,KAACrB,EAAW,KACZqB,EAAAA,EAAAA,KAAC6B,EAAa,CAAA9B,SAAC,cACfC,EAAAA,EAAAA,KAACuB,EAAM,IACNhF,IAAcE,IAASuD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BAC3BC,EAAAA,EAAAA,KAACgB,EAAW,MAGlB,EC9Be,SAASiB,IACtB,OAAOjC,EAAAA,EAAAA,KAAC8B,EAAS,GACnB,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm .styled.jsx","components/ContactForm/ContactForm .jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectStatusFilter = state => state.filter.inputValue;\r\n\r\nexport const selectFilteredContacts = state => {\r\n    const contacts = selectContacts(state);\r\n    const statusFilter = selectStatusFilter(state);\r\n\r\n    if (statusFilter) {\r\n        const normalizedFilter = statusFilter.toLowerCase();\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        );\r\n    }\r\n    return contacts;\r\n};","import styled from \"@emotion/styled\";\r\n// import { Form, Field, ErrorMessage } from \"formik\";\r\n\r\nexport const ContactsForm = styled.form`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  padding: 10px 0;\r\n  &:last-of-type {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin-left: 5px;\r\n  outline: none;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nexport const FormError = styled.p`\r\n  color: ${(props) => props.theme.colors.red};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: ${(props) => props.theme.colors.skyBlueDark};\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${(props) => props.theme.colors.turquoise};\r\n  }\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"redux/contacts/operations\";\r\nimport { selectContacts } from \"redux/contacts/selectors\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport {\r\n  Button,\r\n  ContactsForm,\r\n  FormError,\r\n  Input,\r\n  InputContainer,\r\n} from \"./ContactForm .styled\";\r\n\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const { name, number } = data;\r\n\r\n    if (contacts.some((contact) => contact.name === name)) {\r\n      toast.error(`${name} is already in contacts`, {\r\n        duration: 3000,\r\n      });\r\n      return;\r\n    }\r\n    if (contacts.some((contact) => contact.number === number)) {\r\n      toast.error(`Number ${number} is already in contacts`, {\r\n        duration: 1500,\r\n      });\r\n      return;\r\n    }\r\n\r\n    dispatch(addContact(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <ContactsForm onSubmit={handleSubmit(onSubmit)}>\r\n      <InputContainer>\r\n        <label>\r\n          Name:\r\n          <Input\r\n            type=\"text\"\r\n            {...register(\"name\", {\r\n              required: true,\r\n              pattern: /^[a-zA-Z]+(([' -][a-zA-Z ])?[a-zA-Z]*)*$/,\r\n            })}\r\n          />\r\n          {errors.name && (\r\n            <FormError>\r\n              Name may contain only letters, apostrophe, dash and spaces.\r\n            </FormError>\r\n          )}\r\n        </label>\r\n      </InputContainer>\r\n      <InputContainer>\r\n        <label>\r\n          Phone:\r\n          <Input\r\n            type=\"tel\"\r\n            {...register(\"number\", {\r\n              required: true,\r\n              pattern:\r\n                /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/,\r\n            })}\r\n          />\r\n          {errors.number && (\r\n            <FormError>\r\n              Phone number must be digits and can contain spaces, dashes,\r\n              parentheses and can start with +\r\n            </FormError>\r\n          )}\r\n        </label>\r\n      </InputContainer>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </ContactsForm>\r\n  );\r\n};\r\n\r\nexport { ContactForm };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  padding: 15px;\r\n  border: 1px solid ${(props) => props.theme.colors.skyBlueDark};\r\n`;\r\nexport const Title = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Container, Title } from \"./Section.styled\";\r\n\r\nconst Section = ({ message, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{message}</Title>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport { Section };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  \r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px;\r\n  border-bottom: 2px solid ${(props) => props.theme.colors.skyBlueDark};\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  background-color: ${(props) => props.theme.colors.skyBlueDark};\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${(props) => props.theme.colors.turquoise};\r\n  }\r\n`;\r\n\r\n\r\n","import { DeleteButton, Item, List } from \"./ContactList.styled\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\r\nimport { deleteContact } from \"redux/contacts/operations\";\r\n\r\n\r\nconst ContactList = () => {\r\n  const filteredContacts = useSelector(selectFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteContact = (contactId) => {\r\n    dispatch(deleteContact(contactId));\r\n  };\r\n\r\n  return (\r\n    <List>\r\n      {filteredContacts.map(({ name, number, id }) => (\r\n        <Item key={id}>\r\n          <div>\r\n            <span>{name}: </span>\r\n            <span>{number}</span>\r\n          </div>\r\n          <DeleteButton onClick={() => handleDeleteContact(id)}>\r\n            Delete\r\n          </DeleteButton>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport { ContactList };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  outline: none;\r\n  padding: 5px 10px;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectStatusFilter } from \"redux/contacts/selectors\";\r\nimport { setStatusFilter } from \"redux/contacts/filterSlice\";\r\n\r\nimport { Container, Input } from \"./Filter.styled\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectStatusFilter);\r\n\r\n  const handleFilterChange = (e) => {\r\n    dispatch(setStatusFilter(e.currentTarget.value));\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <label>\r\n        Fined contacts by name\r\n        <br />\r\n        <Input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n      </label>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport { Filter };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactsTitle = styled.h2`\r\n  margin-bottom: 5px;\r\n`;\r\n","import { ContactForm } from \"../ContactForm/ContactForm \";\r\nimport { Section } from \"../Section/Section\";\r\nimport { ContactList } from \"../ContactList/ContactList\";\r\nimport { Filter } from \"../Filter/Filter\";\r\nimport { ContactsTitle } from \"./Phonebook.styled\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchContacts } from \"redux/contacts/operations\";\r\nimport { selectIsLoading, selectError } from \"redux/contacts/selectors\";\r\n\r\nconst Phonebook = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  \r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <Section message=\"Phonebook\">\r\n      <ContactForm />\r\n      <ContactsTitle>Contacts</ContactsTitle>\r\n      <Filter />\r\n      {isLoading && !error && <b>Request in progress...</b>}\r\n      <ContactList />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport { Phonebook };\r\n","import { Phonebook } from 'components/Phonebook/Phonebook';\r\nimport React from 'react'\r\n\r\nexport default function TodosPage () {\r\n  return <Phonebook />;\r\n}\r\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectStatusFilter","filter","inputValue","selectFilteredContacts","statusFilter","normalizedFilter","toLowerCase","contact","name","includes","ContactsForm","styled","form","_templateObject","_taggedTemplateLiteral","InputContainer","div","_templateObject2","Input","input","_templateObject3","FormError","p","_templateObject4","props","theme","colors","red","Button","button","_templateObject5","skyBlueDark","turquoise","ContactForm","dispatch","useDispatch","useSelector","_useForm","useForm","register","handleSubmit","errors","formState","reset","_jsxs","onSubmit","data","number","some","toast","concat","duration","addContact","children","_jsx","_objectSpread","type","required","pattern","Container","Title","h2","Section","_ref","message","List","ul","Item","li","DeleteButton","ContactList","filteredContacts","map","id","onClick","contactId","deleteContact","Filter","value","onChange","e","setStatusFilter","currentTarget","ContactsTitle","Phonebook","useEffect","fetchContacts","TodosPage"],"sourceRoot":""}